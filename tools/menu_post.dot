digraph menu_post {
  n0 [label="(Node 0)\nstart\n"];
 n0 -> n1 [label="true"];
  n1 [label="(Node 1)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\n\\\\tTo add a number to \",)\n"];
 n1 -> n2 [label="true"];
  n2 [label="(Node 2)\nfcall-post to out_string\nt$4 <- avar\n"];
 n2 -> n3 [label="true"];
  n3 [label="(Node 3)\nfcall-pre to print\n_dead_ <- self.print(t$4,)\n"];
 n3 -> n4 [label="true"];
  n4 [label="(Node 4)\nfcall-post to print\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"...enter a:\\\\n\",)\n"];
 n5 -> n6 [label="true"];
  n6 [label="(Node 6)\nfcall-post to out_string\n"];
 n6 -> n7 [label="true"];
  n7 [label="(Node 7)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo negate \",)\n"];
 n7 -> n8 [label="true"];
  n8 [label="(Node 8)\nfcall-post to out_string\nt$10 <- avar\n"];
 n8 -> n9 [label="true"];
  n9 [label="(Node 9)\nfcall-pre to print\n_dead_ <- self.print(t$10,)\n"];
 n9 -> n10 [label="true"];
  n10 [label="(Node 10)\nfcall-post to print\n"];
 n10 -> n11 [label="true"];
  n11 [label="(Node 11)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"...enter b:\\\\n\",)\n"];
 n11 -> n12 [label="true"];
  n12 [label="(Node 12)\nfcall-post to out_string\n"];
 n12 -> n13 [label="true"];
  n13 [label="(Node 13)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo find the difference between \",)\n"];
 n13 -> n14 [label="true"];
  n14 [label="(Node 14)\nfcall-post to out_string\nt$16 <- avar\n"];
 n14 -> n15 [label="true"];
  n15 [label="(Node 15)\nfcall-pre to print\n_dead_ <- self.print(t$16,)\n"];
 n15 -> n16 [label="true"];
  n16 [label="(Node 16)\nfcall-post to print\n"];
 n16 -> n17 [label="true"];
  n17 [label="(Node 17)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"and another number...enter c:\\\\n\",)\n"];
 n17 -> n18 [label="true"];
  n18 [label="(Node 18)\nfcall-post to out_string\n"];
 n18 -> n19 [label="true"];
  n19 [label="(Node 19)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo find the factorial of \",)\n"];
 n19 -> n20 [label="true"];
  n20 [label="(Node 20)\nfcall-post to out_string\nt$22 <- avar\n"];
 n20 -> n21 [label="true"];
  n21 [label="(Node 21)\nfcall-pre to print\n_dead_ <- self.print(t$22,)\n"];
 n21 -> n22 [label="true"];
  n22 [label="(Node 22)\nfcall-post to print\n"];
 n22 -> n23 [label="true"];
  n23 [label="(Node 23)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"...enter d:\\\\n\",)\n"];
 n23 -> n24 [label="true"];
  n24 [label="(Node 24)\nfcall-post to out_string\n"];
 n24 -> n25 [label="true"];
  n25 [label="(Node 25)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo square \",)\n"];
 n25 -> n26 [label="true"];
  n26 [label="(Node 26)\nfcall-post to out_string\nt$28 <- avar\n"];
 n26 -> n27 [label="true"];
  n27 [label="(Node 27)\nfcall-pre to print\n_dead_ <- self.print(t$28,)\n"];
 n27 -> n28 [label="true"];
  n28 [label="(Node 28)\nfcall-post to print\n"];
 n28 -> n29 [label="true"];
  n29 [label="(Node 29)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"...enter e:\\\\n\",)\n"];
 n29 -> n30 [label="true"];
  n30 [label="(Node 30)\nfcall-post to out_string\n"];
 n30 -> n31 [label="true"];
  n31 [label="(Node 31)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo cube \",)\n"];
 n31 -> n32 [label="true"];
  n32 [label="(Node 32)\nfcall-post to out_string\nt$34 <- avar\n"];
 n32 -> n33 [label="true"];
  n33 [label="(Node 33)\nfcall-pre to print\n_dead_ <- self.print(t$34,)\n"];
 n33 -> n34 [label="true"];
  n34 [label="(Node 34)\nfcall-post to print\n"];
 n34 -> n35 [label="true"];
  n35 [label="(Node 35)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"...enter f:\\\\n\",)\n"];
 n35 -> n36 [label="true"];
  n36 [label="(Node 36)\nfcall-post to out_string\n"];
 n36 -> n37 [label="true"];
  n37 [label="(Node 37)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo find out if \",)\n"];
 n37 -> n38 [label="true"];
  n38 [label="(Node 38)\nfcall-post to out_string\nt$40 <- avar\n"];
 n38 -> n39 [label="true"];
  n39 [label="(Node 39)\nfcall-pre to print\n_dead_ <- self.print(t$40,)\n"];
 n39 -> n40 [label="true"];
  n40 [label="(Node 40)\nfcall-post to print\n"];
 n40 -> n41 [label="true"];
  n41 [label="(Node 41)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"is a multiple of 3...enter g:\\\\n\",)\n"];
 n41 -> n42 [label="true"];
  n42 [label="(Node 42)\nfcall-post to out_string\n"];
 n42 -> n43 [label="true"];
  n43 [label="(Node 43)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo divide \",)\n"];
 n43 -> n44 [label="true"];
  n44 [label="(Node 44)\nfcall-post to out_string\nt$46 <- avar\n"];
 n44 -> n45 [label="true"];
  n45 [label="(Node 45)\nfcall-pre to print\n_dead_ <- self.print(t$46,)\n"];
 n45 -> n46 [label="true"];
  n46 [label="(Node 46)\nfcall-post to print\n"];
 n46 -> n47 [label="true"];
  n47 [label="(Node 47)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"by 8...enter h:\\\\n\",)\n"];
 n47 -> n48 [label="true"];
  n48 [label="(Node 48)\nfcall-post to out_string\n"];
 n48 -> n49 [label="true"];
  n49 [label="(Node 49)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo get a new number...enter j:\\\\n\",)\n"];
 n49 -> n50 [label="true"];
  n50 [label="(Node 50)\nfcall-post to out_string\n"];
 n50 -> n51 [label="true"];
  n51 [label="(Node 51)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\tTo quit...enter q:\\\\n\\\\n\",)\n"];
 n51 -> n52 [label="true"];
  n52 [label="(Node 52)\nfcall-post to out_string\n"];
 n52 -> n53 [label="true"];
  n53 [label="(Node 53)\nfcall-pre to in_string\nt$0 <- self.in_string()\n"];
 n53 -> n54 [label="true"];
  n54 [label="(Node 54)\nfcall-post to in_string\nt$0 <- return\n"];
}
