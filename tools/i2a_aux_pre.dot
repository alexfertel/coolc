digraph i2a_aux_pre {
  n0 [label="(Node 0)\nstart\nt$2 <- i\nt$3 <- 0\nt$1 <- t$2 = t$3\n"];
 n0 -> n2 [label="!t$1"];
 n0 -> n1 [label="t$1"];
  n1 [label="(Node 1)\nthen branch\nt$0 <- \"\"\n"];
 n1 -> n3 [label="true"];
  n2 [label="(Node 2)\nelse branch\nt$5 <- i\nt$6 <- 10\nt$4 <- t$5 / t$6\nt$9 <- i\nt$11 <- t$4\nt$12 <- 10\nt$10 <- t$11 * t$12\nt$8 <- t$9 - t$10\n"];
 n2 -> n4 [label="true"];
  n3 [label="(Node 3)\nif-join\nt$0 <- return\n"];
  n4 [label="(Node 4)\nfcall-pre to i2c\nt$7 <- self.i2c(t$8,)\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nfcall-post to i2c\nt$14 <- t$4\n"];
 n5 -> n6 [label="true"];
  n6 [label="(Node 6)\nfcall-pre to i2a_aux\nt$13 <- self.i2a_aux(t$14,)\n"];
 n6 -> n7 [label="true"];
  n7 [label="(Node 7)\nfcall-post to i2a_aux\n"];
 n7 -> n8 [label="true"];
  n8 [label="(Node 8)\nfcall-pre to concat\nt$0 <- t$13.concat(t$7,)\n"];
 n8 -> n9 [label="true"];
  n9 [label="(Node 9)\nfcall-post to concat\n"];
 n9 -> n3 [label="true"];
}
