digraph gen_code_post {
  n0 [label="(Node 0)\nstart\nt$1 <- env\n"];
 n0 -> n1 [label="true"];
  n1 [label="(Node 1)\nwhile-pred\nt$5 <- t$1\n"];
 n1 -> n4 [label="true"];
  n2 [label="(Node 2)\nwhile-join\nt$15 <- t$1\n"];
 n2 -> n15 [label="true"];
  n3 [label="(Node 3)\nwhile-body\n"];
 n3 -> n11 [label="true"];
  n4 [label="(Node 4)\nfcall-pre to isNil\nt$4 <- t$5.isNil()\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nfcall-post to isNil\n"];
 n5 -> n7 [label="!t$4"];
 n5 -> n6 [label="t$4"];
  n6 [label="(Node 6)\nthen branch\nt$3 <- false\n"];
 n6 -> n8 [label="true"];
  n7 [label="(Node 7)\nelse branch\nt$9 <- t$1\n"];
 n7 -> n9 [label="true"];
  n8 [label="(Node 8)\nif-join\n"];
 n8 -> n2 [label="!t$3"];
 n8 -> n3 [label="t$3"];
  n9 [label="(Node 9)\nfcall-pre to head\nt$7 <- t$9.head()\n"];
 n9 -> n10 [label="true"];
  n10 [label="(Node 10)\nfcall-post to head\nt$8 <- self\nt$6 <- t$7 = t$8\nt$3 <- not t$6\n"];
 n10 -> n8 [label="true"];
  n11 [label="(Node 11)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"get_parent().\",)\n"];
 n11 -> n12 [label="true"];
  n12 [label="(Node 12)\nfcall-post to out_string\nt$13 <- t$1\n"];
 n12 -> n13 [label="true"];
  n13 [label="(Node 13)\nfcall-pre to tail\nt$1 <- t$13.tail()\n"];
 n13 -> n14 [label="true"];
  n14 [label="(Node 14)\nfcall-post to tail\n"];
 n14 -> n1 [label="true"];
  n15 [label="(Node 15)\nfcall-pre to isNil\nt$14 <- t$15.isNil()\n"];
 n15 -> n16 [label="true"];
  n16 [label="(Node 16)\nfcall-post to isNil\n"];
 n16 -> n18 [label="!t$14"];
 n16 -> n17 [label="t$14"];
  n17 [label="(Node 17)\nthen branch\n"];
 n17 -> n20 [label="true"];
  n18 [label="(Node 18)\nelse branch\n"];
 n18 -> n28 [label="true"];
  n19 [label="(Node 19)\nif-join\nt$0 <- return\n"];
  n20 [label="(Node 20)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"Error:  free occurrence of \",)\n"];
 n20 -> n21 [label="true"];
  n21 [label="(Node 21)\nfcall-post to out_string\n"];
 n21 -> n22 [label="true"];
  n22 [label="(Node 22)\nfcall-pre to print_self\n_dead_ <- self.print_self()\n"];
 n22 -> n23 [label="true"];
  n23 [label="(Node 23)\nfcall-post to print_self\n"];
 n23 -> n24 [label="true"];
  n24 [label="(Node 24)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\n\",)\n"];
 n24 -> n25 [label="true"];
  n25 [label="(Node 25)\nfcall-post to out_string\n"];
 n25 -> n26 [label="true"];
  n26 [label="(Node 26)\nfcall-pre to abort\n_dead_ <- self.abort()\n"];
 n26 -> n27 [label="true"];
  n27 [label="(Node 27)\nfcall-post to abort\nt$0 <- self\n"];
 n27 -> n19 [label="true"];
  n28 [label="(Node 28)\nfcall-pre to out_string\nt$0 <- self.out_string(\"get_x()\",)\n"];
 n28 -> n29 [label="true"];
  n29 [label="(Node 29)\nfcall-post to out_string\n"];
 n29 -> n19 [label="true"];
}
