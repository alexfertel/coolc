digraph closure_class_pre {
  n0 [label="(Node 0)\nstart\nt$2 <- \"class Closure inherits EvalObject {\\\\n\"\n"];
 n0 -> n1 [label="true"];
  n1 [label="(Node 1)\nfcall-pre to out_string\nt$1 <- self.out_string(t$2,)\n"];
 n1 -> n2 [label="true"];
  n2 [label="(Node 2)\nfcall-post to out_string\nt$4 <- \"  parent : Closure;\\\\n\"\n"];
 n2 -> n3 [label="true"];
  n3 [label="(Node 3)\nfcall-pre to out_string\nt$3 <- self.out_string(t$4,)\n"];
 n3 -> n4 [label="true"];
  n4 [label="(Node 4)\nfcall-post to out_string\nt$6 <- \"  x : EvalObject;\\\\n\"\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nfcall-pre to out_string\nt$5 <- self.out_string(t$6,)\n"];
 n5 -> n6 [label="true"];
  n6 [label="(Node 6)\nfcall-post to out_string\nt$8 <- \"  get_parent() : Closure { parent };\\\\n\"\n"];
 n6 -> n7 [label="true"];
  n7 [label="(Node 7)\nfcall-pre to out_string\nt$7 <- self.out_string(t$8,)\n"];
 n7 -> n8 [label="true"];
  n8 [label="(Node 8)\nfcall-post to out_string\nt$10 <- \"  get_x() : EvalObject { x };\\\\n\"\n"];
 n8 -> n9 [label="true"];
  n9 [label="(Node 9)\nfcall-pre to out_string\nt$9 <- self.out_string(t$10,)\n"];
 n9 -> n10 [label="true"];
  n10 [label="(Node 10)\nfcall-post to out_string\nt$12 <- \"  init(p : Closure) : Closure {{ parent <- p; self; }};\\\\n\"\n"];
 n10 -> n11 [label="true"];
  n11 [label="(Node 11)\nfcall-pre to out_string\nt$11 <- self.out_string(t$12,)\n"];
 n11 -> n12 [label="true"];
  n12 [label="(Node 12)\nfcall-post to out_string\nt$14 <- \"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\\\\n\"\n"];
 n12 -> n13 [label="true"];
  n13 [label="(Node 13)\nfcall-pre to out_string\nt$13 <- self.out_string(t$14,)\n"];
 n13 -> n14 [label="true"];
  n14 [label="(Node 14)\nfcall-post to out_string\nt$15 <- \"};\\\\n\"\n"];
 n14 -> n15 [label="true"];
  n15 [label="(Node 15)\nfcall-pre to out_string\nt$0 <- self.out_string(t$15,)\n"];
 n15 -> n16 [label="true"];
  n16 [label="(Node 16)\nfcall-post to out_string\nt$0 <- return\n"];
}
