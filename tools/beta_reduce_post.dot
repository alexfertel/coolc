digraph beta_reduce_post {
  n0 [label="(Node 0)\nstart\n"];
 n0 -> n1 [label="true"];
  n1 [label="(Node 1)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"beta-reduce: \",)\n"];
 n1 -> n2 [label="true"];
  n2 [label="(Node 2)\nfcall-post to out_string\nt$4 <- e\n"];
 n2 -> n3 [label="true"];
  n3 [label="(Node 3)\nfcall-pre to print_self\n_dead_ <- t$4.print_self()\n"];
 n3 -> n4 [label="true"];
  n4 [label="(Node 4)\nfcall-post to print_self\nt$5 <- false\n"];
 n4 -> n5 [label="true"];
  n5 [label="(Node 5)\nwhile-pred\nt$9 <- t$5\nt$8 <- not t$9\n"];
 n5 -> n6 [label="!t$8"];
 n5 -> n7 [label="t$8"];
  n6 [label="(Node 6)\nwhile-join\n"];
 n6 -> n17 [label="true"];
  n7 [label="(Node 7)\nwhile-body\nt$12 <- e\n"];
 n7 -> n8 [label="true"];
  n8 [label="(Node 8)\nfcall-pre to beta\nt$6 <- t$12.beta()\n"];
 n8 -> n9 [label="true"];
  n9 [label="(Node 9)\nfcall-post to beta\nt$14 <- t$6\nt$15 <- e\nt$13 <- t$14 = t$15\n"];
 n9 -> n11 [label="!t$13"];
 n9 -> n10 [label="t$13"];
  n10 [label="(Node 10)\nthen branch\nt$5 <- true\n"];
 n10 -> n12 [label="true"];
  n11 [label="(Node 11)\nelse branch\ne <- t$6\n"];
 n11 -> n13 [label="true"];
  n12 [label="(Node 12)\nif-join\n"];
 n12 -> n5 [label="true"];
  n13 [label="(Node 13)\nfcall-pre to out_string\n_dead_ <- self.out_string(\" =>\\\\n\",)\n"];
 n13 -> n14 [label="true"];
  n14 [label="(Node 14)\nfcall-post to out_string\nt$19 <- e\n"];
 n14 -> n15 [label="true"];
  n15 [label="(Node 15)\nfcall-pre to print_self\n_dead_ <- t$19.print_self()\n"];
 n15 -> n16 [label="true"];
  n16 [label="(Node 16)\nfcall-post to print_self\n"];
 n16 -> n12 [label="true"];
  n17 [label="(Node 17)\nfcall-pre to out_string\n_dead_ <- self.out_string(\"\\\\n\",)\n"];
 n17 -> n18 [label="true"];
  n18 [label="(Node 18)\nfcall-post to out_string\nt$0 <- e\nt$0 <- return\n"];
}
