3
45
Board
inherits
45
IO
5
attribute_no_init
47
rows
47
Int
attribute_no_init
48
columns
48
Int
attribute_no_init
49
board_size
49
Int
method
51
size_of_board
1
51
initial
51
String
51
Int
52
dynamic_dispatch
52
identifier
52
initial
52
length
0
method
55
board_init
1
55
start
55
String
55
SELF_TYPE
56
let
1
let_binding_init
56
size
56
Int
56
self_dispatch
56
size_of_board
1
56
identifier
56
start
57
block
2
58
if
58
eq
58
identifier
58
size
58
integer
15
59
block
3
60
assign
60
rows
60
integer
3
61
assign
61
columns
61
integer
5
62
assign
62
board_size
62
identifier
62
size
64
if
64
eq
64
identifier
64
size
64
integer
16
65
block
3
66
assign
66
rows
66
integer
4
67
assign
67
columns
67
integer
4
68
assign
68
board_size
68
identifier
68
size
70
if
70
eq
70
identifier
70
size
70
integer
20
71
block
3
72
assign
72
rows
72
integer
4
73
assign
73
columns
73
integer
5
74
assign
74
board_size
74
identifier
74
size
76
if
76
eq
76
identifier
76
size
76
integer
21
77
block
3
78
assign
78
rows
78
integer
3
79
assign
79
columns
79
integer
7
80
assign
80
board_size
80
identifier
80
size
82
if
82
eq
82
identifier
82
size
82
integer
25
83
block
3
84
assign
84
rows
84
integer
5
85
assign
85
columns
85
integer
5
86
assign
86
board_size
86
identifier
86
size
88
if
88
eq
88
identifier
88
size
88
integer
28
89
block
3
90
assign
90
rows
90
integer
7
91
assign
91
columns
91
integer
4
92
assign
92
board_size
92
identifier
92
size
95
block
3
96
assign
96
rows
96
integer
5
97
assign
97
columns
97
integer
5
98
assign
98
board_size
98
identifier
98
size
101
identifier
101
self
110
CellularAutomaton
inherits
110
Board
19
attribute_no_init
111
population_map
111
String
method
113
init
1
113
map
113
String
113
SELF_TYPE
114
block
3
115
assign
115
population_map
115
identifier
115
map
116
self_dispatch
116
board_init
1
116
identifier
116
map
117
identifier
117
self
method
124
print
0
124
SELF_TYPE
126
let
1
let_binding_init
126
i
126
Int
126
integer
0
127
let
1
let_binding_init
127
num
127
Int
127
identifier
127
board_size
128
block
4
129
self_dispatch
129
out_string
1
129
string
\n
130
while
130
lt
130
identifier
130
i
130
identifier
130
num
131
block
3
132
self_dispatch
132
out_string
1
132
dynamic_dispatch
132
identifier
132
population_map
132
substr
2
132
identifier
132
i
132
identifier
132
columns
133
self_dispatch
133
out_string
1
133
string
\n
134
assign
134
i
134
plus
134
identifier
134
i
134
identifier
134
columns
137
self_dispatch
137
out_string
1
137
string
\n
138
identifier
138
self
method
143
num_cells
0
143
Int
144
dynamic_dispatch
144
identifier
144
population_map
144
length
0
method
147
cell
1
147
position
147
Int
147
String
148
if
148
lt
148
minus
148
identifier
148
board_size
148
integer
1
148
identifier
148
position
149
string
 
151
dynamic_dispatch
151
identifier
151
population_map
151
substr
2
151
identifier
151
position
151
integer
1
method
155
north
1
155
position
155
Int
155
String
156
if
156
lt
156
minus
156
identifier
156
position
156
identifier
156
columns
156
integer
0
157
string
 
159
self_dispatch
159
cell
1
159
minus
159
identifier
159
position
159
identifier
159
columns
method
163
south
1
163
position
163
Int
163
String
164
if
164
lt
164
identifier
164
board_size
164
plus
164
identifier
164
position
164
identifier
164
columns
165
string
 
167
self_dispatch
167
cell
1
167
plus
167
identifier
167
position
167
identifier
167
columns
method
171
east
1
171
position
171
Int
171
String
172
if
172
eq
172
times
172
divide
172
plus
172
identifier
172
position
172
integer
1
172
identifier
172
columns
172
identifier
172
columns
172
plus
172
identifier
172
position
172
integer
1
173
string
 
175
self_dispatch
175
cell
1
175
plus
175
identifier
175
position
175
integer
1
method
179
west
1
179
position
179
Int
179
String
180
if
180
eq
180
identifier
180
position
180
integer
0
181
string
 
183
if
183
eq
183
times
183
divide
183
identifier
183
position
183
identifier
183
columns
183
identifier
183
columns
183
identifier
183
position
184
string
 
186
self_dispatch
186
cell
1
186
minus
186
identifier
186
position
186
integer
1
method
190
northwest
1
190
position
190
Int
190
String
191
if
191
lt
191
minus
191
identifier
191
position
191
identifier
191
columns
191
integer
0
192
string
 
193
if
193
eq
193
times
193
divide
193
identifier
193
position
193
identifier
193
columns
193
identifier
193
columns
193
identifier
193
position
194
string
 
196
self_dispatch
196
north
1
196
minus
196
identifier
196
position
196
integer
1
method
200
northeast
1
200
position
200
Int
200
String
201
if
201
lt
201
minus
201
identifier
201
position
201
identifier
201
columns
201
integer
0
202
string
 
203
if
203
eq
203
times
203
divide
203
plus
203
identifier
203
position
203
integer
1
203
identifier
203
columns
203
identifier
203
columns
203
plus
203
identifier
203
position
203
integer
1
204
string
 
206
self_dispatch
206
north
1
206
plus
206
identifier
206
position
206
integer
1
method
210
southeast
1
210
position
210
Int
210
String
211
if
211
lt
211
identifier
211
board_size
211
plus
211
identifier
211
position
211
identifier
211
columns
212
string
 
213
if
213
eq
213
times
213
divide
213
plus
213
identifier
213
position
213
integer
1
213
identifier
213
columns
213
identifier
213
columns
213
plus
213
identifier
213
position
213
integer
1
214
string
 
216
self_dispatch
216
south
1
216
plus
216
identifier
216
position
216
integer
1
method
220
southwest
1
220
position
220
Int
220
String
221
if
221
lt
221
identifier
221
board_size
221
plus
221
identifier
221
position
221
identifier
221
columns
222
string
 
223
if
223
eq
223
times
223
divide
223
identifier
223
position
223
identifier
223
columns
223
identifier
223
columns
223
identifier
223
position
224
string
 
226
self_dispatch
226
south
1
226
minus
226
identifier
226
position
226
integer
1
method
230
neighbors
1
230
position
230
Int
230
Int
231
block
1
232
plus
232
plus
232
plus
232
plus
232
plus
232
plus
232
plus
232
if
232
eq
232
self_dispatch
232
north
1
232
identifier
232
position
232
string
X
232
integer
1
232
integer
0
233
if
233
eq
233
self_dispatch
233
south
1
233
identifier
233
position
233
string
X
233
integer
1
233
integer
0
234
if
234
eq
234
self_dispatch
234
east
1
234
identifier
234
position
234
string
X
234
integer
1
234
integer
0
235
if
235
eq
235
self_dispatch
235
west
1
235
identifier
235
position
235
string
X
235
integer
1
235
integer
0
236
if
236
eq
236
self_dispatch
236
northeast
1
236
identifier
236
position
236
string
X
236
integer
1
236
integer
0
237
if
237
eq
237
self_dispatch
237
northwest
1
237
identifier
237
position
237
string
X
237
integer
1
237
integer
0
238
if
238
eq
238
self_dispatch
238
southeast
1
238
identifier
238
position
238
string
X
238
integer
1
238
integer
0
239
if
239
eq
239
self_dispatch
239
southwest
1
239
identifier
239
position
239
string
X
239
integer
1
239
integer
0
method
247
cell_at_next_evolution
1
247
position
247
Int
247
String
249
if
249
eq
249
self_dispatch
249
neighbors
1
249
identifier
249
position
249
integer
3
250
string
X
252
if
252
eq
252
self_dispatch
252
neighbors
1
252
identifier
252
position
252
integer
2
253
if
253
eq
253
self_dispatch
253
cell
1
253
identifier
253
position
253
string
X
254
string
X
256
string
-
259
string
-
method
264
evolve
0
264
SELF_TYPE
265
let
1
let_binding_init
265
position
265
Int
265
integer
0
266
let
1
let_binding_init
266
num
266
Int
266
self_dispatch
266
num_cells
0
267
let
1
let_binding_no_init
267
temp
267
String
268
block
3
269
while
269
lt
269
identifier
269
position
269
identifier
269
num
270
block
2
271
assign
271
temp
271
dynamic_dispatch
271
identifier
271
temp
271
concat
1
271
self_dispatch
271
cell_at_next_evolution
1
271
identifier
271
position
272
assign
272
position
272
plus
272
identifier
272
position
272
integer
1
275
assign
275
population_map
275
identifier
275
temp
276
identifier
276
self
method
284
option
0
284
String
285
block
1
286
let
1
let_binding_no_init
286
num
286
Int
287
block
26
288
self_dispatch
288
out_string
1
288
string
\nPlease chose a number:\n
289
self_dispatch
289
out_string
1
289
string
\t1: A cross\n
290
self_dispatch
290
out_string
1
290
string
\t2: A slash from the upper left to lower right\n
291
self_dispatch
291
out_string
1
291
string
\t3: A slash from the upper right to lower left\n
292
self_dispatch
292
out_string
1
292
string
\t4: An X\n
293
self_dispatch
293
out_string
1
293
string
\t5: A greater than sign \n
294
self_dispatch
294
out_string
1
294
string
\t6: A less than sign\n
295
self_dispatch
295
out_string
1
295
string
\t7: Two greater than signs\n
296
self_dispatch
296
out_string
1
296
string
\t8: Two less than signs\n
297
self_dispatch
297
out_string
1
297
string
\t9: A 'V'\n
298
self_dispatch
298
out_string
1
298
string
\t10: An inverse 'V'\n
299
self_dispatch
299
out_string
1
299
string
\t11: Numbers 9 and 10 combined\n
300
self_dispatch
300
out_string
1
300
string
\t12: A full grid\n
301
self_dispatch
301
out_string
1
301
string
\t13: A 'T'\n
302
self_dispatch
302
out_string
1
302
string
\t14: A plus '+'\n
303
self_dispatch
303
out_string
1
303
string
\t15: A 'W'\n
304
self_dispatch
304
out_string
1
304
string
\t16: An 'M'\n
305
self_dispatch
305
out_string
1
305
string
\t17: An 'E'\n
306
self_dispatch
306
out_string
1
306
string
\t18: A '3'\n
307
self_dispatch
307
out_string
1
307
string
\t19: An 'O'\n
308
self_dispatch
308
out_string
1
308
string
\t20: An '8'\n
309
self_dispatch
309
out_string
1
309
string
\t21: An 'S'\n
310
self_dispatch
310
out_string
1
310
string
Your choice => 
311
assign
311
num
311
self_dispatch
311
in_int
0
312
self_dispatch
312
out_string
1
312
string
\n
313
if
313
eq
313
identifier
313
num
313
integer
1
314
string
 XX  XXXX XXXX  XX  
315
if
315
eq
315
identifier
315
num
315
integer
2
316
string
    X   X   X   X   X    
317
if
317
eq
317
identifier
317
num
317
integer
3
318
string
X     X     X     X     X
319
if
319
eq
319
identifier
319
num
319
integer
4
320
string
X   X X X   X   X X X   X
321
if
321
eq
321
identifier
321
num
321
integer
5
322
string
X     X     X   X   X    
323
if
323
eq
323
identifier
323
num
323
integer
6
324
string
    X   X   X     X     X
325
if
325
eq
325
identifier
325
num
325
integer
7
326
string
X  X  X  XX  X      
327
if
327
eq
327
identifier
327
num
327
integer
8
328
string
 X  XX  X  X  X     
329
if
329
eq
329
identifier
329
num
329
integer
9
330
string
X   X X X   X  
331
if
331
eq
331
identifier
331
num
331
integer
10
332
string
  X   X X X   X
333
if
333
eq
333
identifier
333
num
333
integer
11
334
string
X X X X X X X X
335
if
335
eq
335
identifier
335
num
335
integer
12
336
string
XXXXXXXXXXXXXXXXXXXXXXXXX
337
if
337
eq
337
identifier
337
num
337
integer
13
338
string
XXXXX  X    X    X    X  
339
if
339
eq
339
identifier
339
num
339
integer
14
340
string
  X    X  XXXXX  X    X  
341
if
341
eq
341
identifier
341
num
341
integer
15
342
string
X     X X X X   X X  
343
if
343
eq
343
identifier
343
num
343
integer
16
344
string
  X X   X X X X     X
345
if
345
eq
345
identifier
345
num
345
integer
17
346
string
XXXXX   X   XXXXX   X   XXXX
347
if
347
eq
347
identifier
347
num
347
integer
18
348
string
XXX    X   X  X    X   XXXX 
349
if
349
eq
349
identifier
349
num
349
integer
19
350
string
 XX X  XX  X XX 
351
if
351
eq
351
identifier
351
num
351
integer
20
352
string
 XX X  XX  X XX X  XX  X XX 
353
if
353
eq
353
identifier
353
num
353
integer
21
354
string
 XXXX   X    XX    X   XXXX 
356
string
                         
method
366
prompt
0
366
Bool
367
block
1
368
let
1
let_binding_no_init
368
ans
368
String
369
block
5
370
self_dispatch
370
out_string
1
370
string
Would you like to continue with the next generation? \n
371
self_dispatch
371
out_string
1
371
string
Please use lowercase y or n for your answer [y]: 
372
assign
372
ans
372
self_dispatch
372
in_string
0
373
self_dispatch
373
out_string
1
373
string
\n
374
if
374
eq
374
identifier
374
ans
374
string
n
375
false
377
true
method
385
prompt2
0
385
Bool
386
let
1
let_binding_no_init
386
ans
386
String
387
block
5
388
self_dispatch
388
out_string
1
388
string
\n\n
389
self_dispatch
389
out_string
1
389
string
Would you like to choose a background pattern? \n
390
self_dispatch
390
out_string
1
390
string
Please use lowercase y or n for your answer [n]: 
391
assign
391
ans
391
self_dispatch
391
in_string
0
392
if
392
eq
392
identifier
392
ans
392
string
y
393
true
395
false
404
Main
inherits
404
CellularAutomaton
2
attribute_no_init
405
cells
405
CellularAutomaton
method
407
main
0
407
SELF_TYPE
408
block
1
409
let
1
let_binding_no_init
409
continue
409
Bool
410
let
1
let_binding_no_init
410
choice
410
String
411
block
4
412
self_dispatch
412
out_string
1
412
string
Welcome to the Game of Life.\n
413
self_dispatch
413
out_string
1
413
string
There are many initial states to choose from. \n
414
while
414
self_dispatch
414
prompt2
0
415
block
5
416
assign
416
continue
416
true
417
assign
417
choice
417
self_dispatch
417
option
0
418
assign
418
cells
418
dynamic_dispatch
418
new
418
CellularAutomaton
418
init
1
418
identifier
418
choice
419
dynamic_dispatch
419
identifier
419
cells
419
print
0
420
while
420
identifier
420
continue
421
if
421
self_dispatch
421
prompt
0
422
block
2
423
dynamic_dispatch
423
identifier
423
cells
423
evolve
0
424
dynamic_dispatch
424
identifier
424
cells
424
print
0
427
assign
427
continue
427
false
432
identifier
432
self
